import sys, os, subprocess, glob

#java_home		= '/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0'
#java_home		= '/usr/lib/jvm/java-1.6.0-openjdk'
#java_home		= '/usr/java/jdk'
java_home		= '/Library/Java/Home'
java_includes	= [os.path.join(java_home, 'include'), os.path.join(java_home, 'include/linux')]
#java_libs		= os.path.join(java_home, 'lib')

os.system('swig -java -package com.googlecode.memlink -o memlink_client_java.c -outdir com/googlecode/memlink ../c/memlink_client.i')
os.system('cp MemLinkClient.java com/googlecode/memlink/')
#os.system('cp MemLinkResult.java com/googlecode/memlink/')
#os.system('cp MemLinkRcInfo.java com/googlecode/memlink/')
#os.system('cp MemLinkWcInfo.java com/googlecode/memlink/')
#os.system('cp MemLinkScInfo.java com/googlecode/memlink/')
#os.system('cp MemLinkInsertMkv.java com/googlecode/memlink/')

cflags   = '-ggdb -fpic'
includes = ['.', '../../', '../c/'] + java_includes
libpath  = ['.']
libs	 = ['m']
files    = ['../../zzmalloc.c', '../../serial.c', '../../logfile.c', '../../utils.c', 
			'../c/memlink_client.c']

env = Environment(CCFLAGS=cflags, CPPPATH=includes, LIBPATH=libpath, LIBS=libs)
shared_files = []
for fn in files:
    name = os.path.basename(fn)[:-2]
    shared_files.append(env.SharedObject('client-' + name, fn))
shared_files.append('memlink_client_java.c')

env.SharedLibrary("memlink", shared_files)

t = Java(target='.', source='com')
Jar(target="memlink.jar", source=['com'])

# for clean
files = glob.glob('com/googlecode/memlink/*.java')
files.remove('com/googlecode/memlink/MemLinkClient.java')
files.append('memlink_client_java.c')
files += glob.glob("*.class")
Clean(t, files)


